name: Build all flavors

on:
  schedule:
    - cron: '0 3 1,14 * *' # 3AM on 1st and 14th of every month
  workflow_dispatch:

concurrency:
  group: 'biweekly-deploy'
  cancel-in-progress: false

jobs:
  version-bump:
    name: Bump version
    runs-on: ubuntu-latest
    outputs:
      downstream: ${{ steps.version_bump.outputs.downstream }}
      code: ${{ steps.version_bump.outputs.code }}

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
          token: ${{ secrets.PAT_TOKEN }} # âœ… Token fix

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get current version
        id: current_version
        run: |
          VERSION=$(grep -E '^\s*versionName\s*=' composeApp/build.gradle.kts | awk -F '"' '{print $2}')
          VERSION_CODE=$(grep -E '^\s*versionCode\s*=' composeApp/build.gradle.kts | awk -F '= ' '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "code=$VERSION_CODE" >> $GITHUB_OUTPUT

      - name: Bump version
        id: version_bump
        run: |
          VERSION=$(grep -E '^\s*versionName\s*=' composeApp/build.gradle.kts | awk -F '"' '{print $2}')
          VERSION_CODE=$(grep -E '^\s*versionCode\s*=' composeApp/build.gradle.kts | awk -F '= ' '{print $2}')
          NEW_VERSION=$(echo $VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          NEW_VERSION_CODE=$((VERSION_CODE + 1))
          sed -i "s/versionName = \"$VERSION\"/versionName = \"$NEW_VERSION\"/g" composeApp/build.gradle.kts
          sed -i "s/versionCode = $VERSION_CODE/versionCode = $NEW_VERSION_CODE/g" composeApp/build.gradle.kts
          echo "downstream=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "code=$NEW_VERSION_CODE" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        run: |
          git add composeApp/build.gradle.kts
          git commit -m "Auto-bump version to ${{ steps.version_bump.outputs.downstream }}"
          git push

  build-time:
    name: Capture current time
    runs-on: ubuntu-latest
    needs: [version-bump]
    outputs:
      date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

  build-uncompressed:
    needs: [version-bump, build-time]
    name: Build uncompressed version
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
          token: ${{ secrets.PAT_TOKEN }}
      - name: Setup Java 21
        uses: actions/setup-java@v5.0.0
        with:
          java-version: "21"
          distribution: "corretto"
      - name: Restore Gradle cache
        uses: actions/cache@v4.2.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./build
            ./composeApp/build
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      - name: Build with Gradle
        run: ./gradlew assembleGithubUncompressed
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: unsigned-uncompressed
          path: composeApp/build/outputs/apk/github/uncompressed/*.apk

  build-release:
    needs: [version-bump, build-time]
    name: Build release version
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
          token: ${{ secrets.PAT_TOKEN }}
      - name: Setup Java 21
        uses: actions/setup-java@v5.0.0
        with:
          java-version: "21"
          distribution: "corretto"
      - name: Restore Gradle cache
        uses: actions/cache@v4.2.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./build
            ./composeApp/build
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      - name: Build with Gradle
        run: ./gradlew assembleGithubRelease
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: unsigned-release
          path: composeApp/build/outputs/apk/github/release/*.apk

  build-izzy:
    needs: [version-bump, build-time]
    name: Build Izzy version
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
          token: ${{ secrets.PAT_TOKEN }}
      - name: Setup Java 21
        uses: actions/setup-java@v5.0.0
        with:
          java-version: "21"
          distribution: "corretto"
      - name: Restore Gradle cache
        uses: actions/cache@v4.2.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./build
            ./composeApp/build
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      - name: Build with Gradle
        run: ./gradlew assembleIzzyRelease
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: unsigned-izzy
          path: composeApp/build/outputs/apk/izzy/release/*.apk

  sign-apks:
    name: Sign all built APKs
    needs: [build-uncompressed, build-release, build-izzy]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5.0.0
        with:
          path: upstream/unsigned
          merge-multiple: true
      - name: Sign APKs
        uses: Tlaster/android-sign@v1.2.2
        with:
          releaseDirectory: upstream/unsigned
          signingKeyBase64: "${{ secrets.KREATE_KEYSTORE }}"
          keyStorePassword: "${{ secrets.KREATE_KEYSTORE_PASSWD }}"
          alias: "${{ secrets.KREATE_KEY_ALIAS }}"
          keyPassword: "${{ secrets.KREATE_KEY_PASSWD }}"
          output: signed
      - name: Remove trails
        run: |
          for filename in signed/*.apk; do mv "$filename" "${filename//-signed}"; done
      - name: Upload signed APKs
        uses: actions/upload-artifact@v4.6.2
        with:
          name: signed-apks
          path: signed/*.apk

  upload-to-release:
    needs: [version-bump, build-time, sign-apks]
    runs-on: ubuntu-latest
    steps:
      - name: Download signed APKs
        uses: actions/download-artifact@v5.0.0
        with:
          name: signed-apks
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: '*.apk'
          name: v${{ needs.version-bump.outputs.downstream }}-${{ needs.build-time.outputs.date }}
          tag_name: v${{ needs.version-bump.outputs.downstream }}
          make_latest: "true"
          body: |
            ## Release Notes
            Automated build from your forked repo.
          token: ${{ secrets.RELEASE_TOKEN }}
          generate_release_notes: true
