name: Build all flavors

on:
  schedule:
    - cron: '0 3 1,14 * *'  # 3AM on the 1st and 14th of every month
  workflow_dispatch:

concurrency:
  group: 'biweekly-deploy'
  cancel-in-progress: false

jobs:
  build_time:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

  versioning:
    runs-on: ubuntu-latest
    outputs:
      downstream: ${{ steps.downstream.outputs.version }}
      code: ${{ steps.downstream.outputs.code }}
      upstream: ${{ steps.upstream.outputs.version }}
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true

      - name: Get downstream (local) version
        id: downstream
        run: |
          echo "version=$(grep -E '^\s*versionName\s*=' composeApp/build.gradle.kts | awk -F '\"' '{print $2}')" >> $GITHUB_OUTPUT
          echo "code=$(grep -E '^\s*versionCode\s*=' composeApp/build.gradle.kts | awk -F '= ' '{print $2}')" >> $GITHUB_OUTPUT

      - name: Get upstream version
        id: upstream
        run: |
          tag_name="$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)"
          echo "version=${tag_name#v}" >> $GITHUB_OUTPUT

  verify-version:
    needs: [versioning]
    runs-on: ubuntu-latest
    steps:
      - name: Fail if same version
        run: |
          if [ "${{ needs.versioning.outputs.downstream }}" = "${{ needs.versioning.outputs.upstream }}" ]; then
            echo "⚠️ Version already released"
            exit 1
          fi

      - uses: actions/checkout@v5
        with:
          submodules: true

      - name: Ensure changelog exists
        run: |
          mkdir -p fastlane/metadata/android/en-US/changelogs
          if [ ! -e "fastlane/metadata/android/en-US/changelogs/${{ needs.versioning.outputs.code }}.txt" ]; then
            echo "⚠️ No changelog provided for this version." > fastlane/metadata/android/en-US/changelogs/${{ needs.versioning.outputs.code }}.txt
          fi

  build-uncompressed:
    needs: [versioning, verify-version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - uses: actions/setup-java@v5
        with:
          java-version: "21"
          distribution: "corretto"
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./build
            ./composeApp/build
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      - run: ./gradlew assembleGithubUncompressed
      - uses: actions/upload-artifact@v4
        with:
          name: unsigned-uncompressed
          path: composeApp/build/outputs/apk/github/uncompressed/*.apk

  build-release:
    needs: [versioning, verify-version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - uses: actions/setup-java@v5
        with:
          java-version: "21"
          distribution: "corretto"
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./build
            ./composeApp/build
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      - run: ./gradlew assembleGithubRelease
      - uses: actions/upload-artifact@v4
        with:
          name: unsigned-release
          path: composeApp/build/outputs/apk/github/release/*.apk

  build-izzy:
    needs: [versioning, verify-version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - uses: actions/setup-java@v5
        with:
          java-version: "21"
          distribution: "corretto"
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./build
            ./composeApp/build
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      - run: ./gradlew assembleIzzyRelease
      - uses: actions/upload-artifact@v4
        with:
          name: unsigned-izzy
          path: composeApp/build/outputs/apk/izzy/release/*.apk

  sign-apks:
    needs: [build-uncompressed, build-release, build-izzy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v5
        with:
          path: upstream/unsigned
          merge-multiple: true
      - uses: Tlaster/android-sign@v1.2.2
        with:
          releaseDirectory: upstream/unsigned
          signingKeyBase64: "${{ secrets.KREATE_KEYSTORE }}"
          keyStorePassword: "${{ secrets.KREATE_KEYSTORE_PASSWD }}"
          alias: "${{ secrets.KREATE_KEY_ALIAS }}"
          keyPassword: "${{ secrets.KREATE_KEY_PASSWD }}"
          output: signed
        env:
          BUILD_TOOLS_VERSION: "34.0.0"
      - name: Remove -signed suffix
        run: for f in signed/*.apk; do mv "$f" "${f//-signed}"; done
      - uses: actions/upload-artifact@v4
        with:
          name: signed-apks
          path: signed/*.apk

  upload-to-release:
    needs: [build_time, versioning, sign-apks]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: signed-apks
      - uses: softprops/action-gh-release@v2
        with:
          files: '*.apk'
          name: v${{ needs.versioning.outputs.downstream }}-${{ needs.build_time.outputs.date }}
          tag_name: v${{ needs.versioning.outputs.downstream }}
          make_latest: true
          body: |
            ## What's `Kreate-izzy.apk`
            This is APK built specifically for IzzyOnDroid with update checker disabled. You shouldn't download this version here.

            ## Verification
            Always check for signature before installing any app you downloaded.

            ## Changelogs
            Please visit [wiki/changelogs](https://github.com/${{ github.repository }}/wiki/Changelogs) for details.
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
